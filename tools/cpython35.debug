FROM debian:jessie-slim


# this is a cut-down variation of the Dockerfile from
# https://github.com/vertexproject/pydebug

# it builds a version of Python with the debug options enabled, so
# that we can use the lldebug flags for stack debugging (important
# when testing out a bytecode compiler, haha)


ENV PYTHON_VERSION 3.5.5


# http://bugs.python.org/issue19846 -- At the moment, setting "LANG=C"
# on a Linux system fundamentally breaks Python 3
ENV LANG C.UTF-8

# ensure local python is preferred over distribution python
ENV PATH /usr/local/bin:$PATH


# Copy in our GDB initialization commands
COPY gdbinit /root/.gdbinit


# run and build dependencies
RUN apt-get update \
    && apt-get install -qq -y --no-install-recommends apt-utils \
    && apt-get install -qq -y --no-install-recommends \
	       bash \
	       ca-certificates \
	       dpkg-dev \
	       gcc \
	       gdb \
	       grep \
	       less \
	       libbz2-dev \
	       libc6-dev \
	       libexpat1 \
	       libexpat1-dev \
	       libffi-dev \
	       libffi6 \
	       libgdbm-dev \
	       libgdbm3 \
	       liblzma-dev \
	       libreadline-dev \
	       libreadline6 \
	       libreadline6-dev \
	       libsqlite3-0 \
	       libsqlite3-dev \
	       libssl-dev \
	       libssl1.0.0 \
	       make \
	       nano \
	       ncurses-base \
	       ncurses-bin \
	       ncurses-dev \
	       patch \
	       readline-common \
	       tcl-dev \
	       tk-dev \
	       wget \
	       xz-utils \
	       zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*


RUN set -ex \
    && wget -qO python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
    && rm -f python.tar.xz.asc \
    && mkdir -p /usr/src/python \
    && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
    && rm python.tar.xz \
    && cd /usr/src/python \
    && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
    && ./configure \
	   --build="$gnuArch" \
	   --enable-loadable-sqlite-extensions \
	   --enable-shared \
	   --with-system-expat \
	   --with-system-ffi \
	   --without-ensurepip \
	   --with-pydebug \
	   CFLAGS="-g -O0" \
    && make -j "$(nproc)" \
    && make install \
    && mkdir /gdb \
    && touch /gdb/__init__.py \
    && cp /usr/src/python/python-gdb.py /gdb/libpython.py \
    && ldconfig \
    && find /usr/local -depth \
	    \( \
	    \( -type d -a \( -name test -o -name tests \) \) \
	    -o \
	    \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
	    \) -exec rm -rf '{}' +


# I hate these symlinks, but get-pip.py expects them
RUN cd /usr/local/bin \
    && ln -s idle3 idle \
    && ln -s pydoc3 pydoc \
    && ln -s python3 python \
    && ln -s python3-config python-config


RUN set -ex; \
    wget -qO get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \
    python get-pip.py \
	   --disable-pip-version-check \
	   --no-cache-dir ; \
    pip --version; \
    find /usr/local -depth \
	 \( \
	 \( -type d -a \( -name test -o -name tests \) \) \
	 -o \
	 \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
	 \) -exec rm -rf '{}' +; \
    rm -f get-pip.py


RUN pip install --upgrade pip setuptools
RUN pip install gnureadline flake8


# The end.
