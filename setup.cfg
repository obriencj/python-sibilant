# This file defines the general configuration for the sibilant
# wheel, and the tools tox, nose, flake8, coverage, and sphinx


[metadata]
name = sibilant
version = 0.9.0
description = Lisp dialect for Python

author = Christopher O'Brien
author_email = obriencj@gmail.com

license = GNU Lesser General Public License v3 (LGPLv3)
license_file = LICENSE

long_description = file: README.md
long_description_content_type = text/markdown

project_urls =
  Source = https://github.com/obriencj/python-sibilant
  Bug Reports = https://github.com/obriencj/python-sibilant/issues
  Documentation = https://obriencj.github.io/python-sibilant

classifiers =
  Intended Audience :: Developers
  License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
  Programming Language :: Python :: 3 :: Only
  Programming Language :: Python :: 3.5
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: Implementation :: CPython
  Topic :: Software Development


[aliases]
# nose acts enough like the original test command, but without the
# extremely obnoxious deprecation warning. And why are they
# deprecating the test command? So someone can remove approximately 40
# lines of code from setuptools, despite the test command being the
# most convenient and available way to get started with unit testing.

docs = build_sphinx
test = nosetests


[build_sphinx]
# some of the configuration for sphinx. The rest of it lives over in
# docs/conf.py

project = python-sibilant
copyright = 2020, Christopher O'Brien

# eg. 1.0
version = 0.9.0

# eg. 1.0.0
release = 0.9.0

build-dir = build/sphinx
builder = dirhtml html
source-dir = docs


[tox:tox]
envlist = flake8,py{35,36,37},coverage
skip_missing_interpreters = true


[testenv]
setenv =
  COVERAGE_FILE = .coverage.{envname}
  PYTHONWARNINGS = ignore

commands =
  python -B -m nose

sitepackages = false

deps =
  asynctest
  docutils
  mock
  nose


[covgen]
commands =
  coverage run -m nose

deps =
  coverage
  {[testenv]deps}


[testenv:py37]
# piggyback coverage on top of the py37 unit tests.
commands =
  {[covgen]commands}

deps =
  {[covgen]deps}


[testenv:coverage]
setenv =
  COVERAGE_FILE = .coverage
  PYTHONWARNINGS = ignore

basepython = python3.7

commands =
  coverage combine
  coverage report
  coverage html

deps =
  coverage


[testenv:flake8]

basepython = python3.7

commands =
  python -B -m flake8 sibilant

deps =
  flake8
  {[testenv]deps}


[nosetests]

all-modules = 1
no-byte-compile = 1
verbosity = 2


[coverage:run]

include =
  sibilant/*


[coverage:report]

exclude_lines =
  pass
  pragma: no cover
  @abstract


[flake8]
# E303 complains about more than one blank lines between methods in a class
# E731 assigning a lambda to a variable
# E741 ambiguous variable name
# F401 ambiguous variable name
# F812 list comprehension redefines variable (I reuse tmp names)
# W504 line break after binary operator

ignore = E303,E731,E741,F401,F812,W504

exclude =
  __pycache__
  .*
  build
  dist
  docs
  gh-pages
  htmlcov
  setup.py
  tests
  todo
  tools


#
# The end.
